name: Migration Workflow

on:
  workflow_dispatch:
    inputs:
      names:
        description: 'Comma-separated list of names to migrate'
        required: true

jobs:
  prepare:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      jobid: ${{ steps.setup.outputs.jobid }}
      migration_data: ${{ steps.prepare.outputs.data }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup
        id: setup
        run: |
          JOBID=$(date +%y%m%d.%H%M%S)
          echo "jobid=$JOBID" >> $GITHUB_OUTPUT
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}
          git checkout -b feature/$JOBID
          git push -u origin feature/$JOBID
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare Migration Data
        id: prepare
        run: |
          python scripts/prepare_migration.py \
            --names "${{ github.event.inputs.names }}" \
            --jobid "${{ steps.setup.outputs.jobid }}" > migration_data.json
          echo "data=$(cat migration_data.json)" >> $GITHUB_OUTPUT

  stage1:
    needs: prepare
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v2
        with:
          ref: feature/${{ needs.prepare.outputs.jobid }}
          fetch-depth: 0
      - name: Run Stage 1
        run: |
          python scripts/run_migration.py \
            "${{ github.event.inputs.names }}" \
            "${{ needs.prepare.outputs.jobid }}" \
            "World 1-1"
      - name: Upload stage results
        uses: actions/upload-artifact@v4
        with:
          name: stage1-results-${{ needs.prepare.outputs.jobid }}
          path: log/
          retention-days: 1
      - name: Push Stage 1 Changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}
          git add log/
          git commit -m "Stage 1 results for job ${{ needs.prepare.outputs.jobid }}"
          git push origin feature/${{ needs.prepare.outputs.jobid }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  stage2:
    needs: [prepare, stage1]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v2
        with:
          ref: feature/${{ needs.prepare.outputs.jobid }}
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download previous results
        uses: actions/download-artifact@v4
        with:
          name: stage1-results-${{ needs.prepare.outputs.jobid }}
          path: log/

      - name: Run Stage 2
        run: |
          python scripts/run_migration.py \
            "${{ github.event.inputs.names }}" \
            "${{ needs.prepare.outputs.jobid }}" \
            "World 1-2"

      - name: Upload stage results
        uses: actions/upload-artifact@v4
        with:
          name: stage2-results-${{ needs.prepare.outputs.jobid }}
          path: log/
          retention-days: 1

      - name: Push Stage 2 Changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}
          git add log/
          git commit -m "Stage 2 results for job ${{ needs.prepare.outputs.jobid }}"
          git push origin feature/${{ needs.prepare.outputs.jobid }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  stage3:
    needs: [prepare, stage2]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v2
        with:
          ref: feature/${{ needs.prepare.outputs.jobid }}
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download previous results
        uses: actions/download-artifact@v4
        with:
          name: stage2-results-${{ needs.prepare.outputs.jobid }}
          path: log/

      - name: Run Stage 3
        run: |
          python scripts/run_migration.py \
            "${{ github.event.inputs.names }}" \
            "${{ needs.prepare.outputs.jobid }}" \
            "World 1-3"

      - name: Upload stage results
        uses: actions/upload-artifact@v4
        with:
          name: stage3-results-${{ needs.prepare.outputs.jobid }}
          path: log/
          retention-days: 1

      - name: Push Stage 3 Changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}
          git add log/
          git commit -m "Stage 3 results for job ${{ needs.prepare.outputs.jobid }}"
          git push origin feature/${{ needs.prepare.outputs.jobid }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  finalize:
    needs: [prepare, stage3]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v2
        with:
          ref: feature/${{ needs.prepare.outputs.jobid }}
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Merge to main
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}
          
          # Create Pull Request
          gh pr create --base main --head feature/${{ needs.prepare.outputs.jobid }} --title "Merge migration job ${{ needs.prepare.outputs.jobid }}" --body "Automated merge of migration job ${{ needs.prepare.outputs.jobid }}"
          
          # Get Pull Request Number
          PR_NUMBER=$(gh pr list --base main --head feature/${{ needs.prepare.outputs.jobid }} --json number --jq '.[0].number')
          
          # Approve Pull Request
          gh pr review $PR_NUMBER --approve
          
          # Merge Pull Request
          gh pr merge $PR_NUMBER --merge
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}